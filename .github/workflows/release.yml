name: Build and Release

on:
  push:
    branches:
      - "main"
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CARGO_TERM_COLOR: always
  LIVE_CONFIG_URL: ${{ secrets.LIVE_CONFIG_URL }}

jobs:
  build_gui:
    # telechecker_gui
    name: Build telechecker_gui
    strategy:
      matrix:
        target:
          [
            x86_64-unknown-linux-gnu,
            x86_64-pc-windows-msvc,
            aarch64-apple-darwin
          ]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            binary_file: telechecker_gui
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            binary_file: telechecker_gui.exe
          - target: aarch64-apple-darwin
            os: macos-latest
            binary_file: telechecker_gui
    if: github.ref == 'refs/heads/main' || github.ref_type == 'tag'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo -V && rustc -V
      - name: Install toolchain
        run: rustup target add ${{ matrix.target }}
      - name: Build
        run: cargo build -p telechecker_gui --release --target ${{ matrix.target }}
      # telechecker bin
      - name: Export build
        run: mkdir build && cp target/${{ matrix.target }}/release/${{ matrix.binary_file }} build/
      - name: Build zip
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          path: './build'
          filename: 'telechecker_gui_${{ matrix.target }}.zip'
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: telechecker_gui_${{ matrix.target }}
          path: telechecker_gui_${{ matrix.target }}.zip

  # telechecker_cli
  build_cli:
    name: Build telechecker_cli
    strategy:
      matrix:
        target:
          [
            x86_64-unknown-linux-gnu,
            x86_64-pc-windows-msvc,
            aarch64-apple-darwin
          ]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            binary_file: telechecker_cli
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            binary_file: telechecker_cli.exe
          - target: aarch64-apple-darwin
            os: macos-latest
            binary_file: telechecker_cli
    if: github.ref == 'refs/heads/main' || github.ref_type == 'tag'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo -V && rustc -V
      - name: Install toolchain
        run: rustup target add ${{ matrix.target }}
      - name: Build
        run: cargo build -p telechecker_cli --release --target ${{ matrix.target }}
      # telechecker bin
      - name: Export build
        run: mkdir build && cp target/${{ matrix.target }}/release/${{ matrix.binary_file }} build/
      - name: Build zip
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          path: './build'
          filename: 'telechecker_cli_${{ matrix.target }}.zip'
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: telechecker_cli_${{ matrix.target }}
          path: telechecker_cli_${{ matrix.target }}.zip

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs:
      - build_gui
      - build_cli
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }} Release
          prerelease: false
          draft: true

  publish_release:
    name: Publish Release
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs:
      - create_release
    strategy:
      matrix:
        target:
          [
            x86_64-unknown-linux-gnu,
            x86_64-pc-windows-msvc,
            aarch64-apple-darwin
          ]
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Upload ${{ matrix.target }} build_gui
        uses: actions/upload-release-asset@v1
        env:
          TARGET: ${{ matrix.target }}
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: artifacts/telechecker_gui_${{ env.TARGET }}/telechecker_gui_${{ env.TARGET }}.zip
          asset_name: telechecker_gui_${{ env.TARGET }}_${{ github.ref_name }}.zip
          asset_content_type: application/zip
      - name: Upload ${{ matrix.target }} build_cli
        uses: actions/upload-release-asset@v1
        env:
          TARGET: ${{ matrix.target }}
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: artifacts/telechecker_cli_${{ env.TARGET }}/telechecker_cli_${{ env.TARGET }}.zip
          asset_name: telechecker_cli_${{ env.TARGET }}_${{ github.ref_name }}.zip
          asset_content_type: application/zip
